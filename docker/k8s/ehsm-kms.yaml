# ehsm-kms Secret
apiVersion: v1
kind: Secret
metadata:
    name: ehsm-secret
    namespace: ehsm-kms
type: Opaque
data:
    couch_root_username: YWRtaW4=
    couch_root_password: cGFzc3dvcmQ=

---
# ehsm-kms ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: ehsm-configmap
  namespace: ehsm-kms
data:
  database_url: "couchdb-0.couchdb"
  database_port: "5984"
  database_name: "ehsm_kms_db"
  # you need adjust 1.2.3.4 to your dkeyserver IP.
  dkeyserver_ip: "1.2.3.4"
  # you need adjust 8888 to your dkeyserver port.
  dkeyserver_port: "8888"
  # you need adjust https://1.2.3.4:8081 to your pccs_url.
  pccs_url: "https://1.2.3.4:8081"
  # open-ssl key config setting
  openssl_countryName : "CN"
  openssl_localityName : "SH"
  openssl_organizationName : "Intel"
  openssl_organizationalUnitName : "Dev"
  openssl_commonName : "ehsm"
  openssl_emailAddress : "ehsm@intel.com"
  # custom open-ssl key
  # The default value is "", The system will automatically create a self signed certificate by open-ssl of ConfigMap
  # If you want to use your own certificate, you can base 64 the contents of the certificate and put them in [tls.key] and [tls.crt]
  # eg. openssl_key: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUcvd0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQnVrd2dnYmxBZ0VBQW9JQmdRQzhuRHV6aFp2dE9pMzEKM3RWWHBWdkgxUENzOW1KVDl6Mkc4WlN1bG1QQU5zdVZCT0Zra2ZxNGdnRy9pMFNGTFlhNVlFcFEwaDYyRDlUcgpzTnJpRGQrTGNJUUdlNG1Hb3RjMEpvZk8zZ3VyYURzeVBsR3ljRkxRZzJ1UnU1dC9xVmU2YmVaNC9SZ0svZUNaCldiN0V3TnlkaGJRRm9QOFB4d2wyZXBvcVR2eE9rMlBacXI4MHd4dk5Hd1pBV081RWtqSTRuTWpPV1pRQTJoRmsKZEVOekJZYmFHeVRxNXlmaWNudjNNNWJ5OW9HanIyTHBFcU9mcmVjdTNsUEg2cjlaazljQytURnBnY3loSjlvVApFM0RUUzJXdTcrL3E5eEJKcmNVSHJ1M3h6VlZFZTBIckFmd3pMbWs4ejAwcm9WMENZb1c3NFdWMEM0UHBNTzM5CmtYalZNNTArUW5sWmlqUkkyOWNTeWFnRGJKTVRmS2RPeWtvU24wOFVSVDgrd3JHbStML252UmpOZFpydHZzL1YKU3ZiUC9OV0tYWG51YnoxVHpEdHB2dkdIRkQvZU9nOS9vczB3d1V0UEFWcDNUcldwN2c3YTNhektlK0ZlMDRFYwpXajREL1A2aG4vdGsxQmFmelUyajZOVDVoSEJ5TklRdmVrZGhYOHByaEwra0VBQWw4ajhDQXdFQUFRS0NBWUErCmlNcGVsa0VCb1pXVmZLRmRvdXpRVDdEUW1BdzM3TFNRcGs1MnFGUkFhYXFNS1FjV0VqUi9zbE1rRCtmVEJDbzAKRWxIeGhBazhzZmtWZ0JqQ2RIa1d3V0oweDhic1JkZDJhZ1FET2FuQzFoY3liR2tuOFlmenJHOGc3WVA4Q3NpVQpmbFc0N2Fsb0U0N0JLWGxQd09Za3NDems1T0ZNZU9DUlVNc0dsaE9mZGN6WVlYMXQzL2E2eFdnSU03UWtOaGpDCm5uRVJ3YStKck1PeGU3N1ZSeExVQThYMHdGbUFBaGRKK2VmbGZJZTFIclI3dEh0ZHVRbjZoeXBlRVY0S05ESzMKQjhQRXh6ZVZ3YTIyNk93eHowVmo1Y05kditSamp6RTI4RkdoT2U1bVp1eVRkRVVFUnFNYUJsZEFqT1BzaGtZcgp0MUVHSVRRTUVzTEo2a3h6ck1VOXk0ZjNtZzg3ZjB3dWszMmdLd3NwZEtTemcxaHUzVkpoTWxQRmdmdjV0OEZEClNtREt2VlV6WU9HZHAvOEdNZjh5VzdXL2NkVlJTdys5cThrS2tEMnFKNFVYV3RuUVI4cDR0NytROW93ZmlGQ3MKNmtyZFh1RURIdlZMbnppNlpPTFo3UGRpZ3JENUhZWVY5QmJudWVPcEZBdkVSeThuZDFqU3FjR2V1bjQrUmpFQwpnY0VBM25zTllUTWg2aUgzczBxYm1ZTHU0bnNrOU1ZbVlJZjZGWC9ET2cvNkxtQU4xMjJseHlIOTIrUE5FQnJDCnovdWhQUTVtcXNMRDJvNStTUlFrSTEyM3hkeDZ3V3F1NmZzZ3hvRlgrendCeSt1NTRpbS82YkN3MUNuUS9JTlAKNVlPcmJaaTlWekVidnU3ZklBaTA3Ny9kOUNuMjNaeWNlZ0gyZ1h6aXlzaW9mLzdEbHVLaVNUYm42eFFGSE5RZgp3RXVLR2xsV1ZwNlUxcXlTVGZ5VHRKb0Q0M2JteTJ4MVA3TEcxMUw1UjFoWWNVMU9vaFRhN3F1ejZ2MytqZCtvCllPb0pBb0hCQU5rRzBmZk5OU0xQQ1MvdXI0UXRmT3hNdnBMRGwzVmpQR054K1JaeHlDM1VrdHFuTWJkZkpRWUYKUUdINk9HVFRDZGZFeWpOQmliR3hUbVFMWmtYaERlN2RMY29RaG15azQ3U1FkY2l0K2tJdkxMQm56UGhpS3d0KwpsWWRIT1A3SWZrQTBjeWMyV1JLNVp2L3BNV281QkFZWFZGT2orZmJsMEZzcklsajhXNnFuN2tWNHZ3Z1Y4V0w3CllxaDdsZ1NKNFlwU2pUMlJDMjFsaStyUDVQeUlMcm1YWmhBSUg3anVJYXhLVGg2M3NDWnJQQUU0ZU42dnk4aWkKVWRFS3ZKWXNCd0tCd1FDeWlTMERnM1VEM3A1WVV0YnJLaGRweUVpdjVST0hBNWU5Q1BveDdnQm1sczZFd29qMgpkR0N6eE9zYXNWOEVhSG5MOVhLT05oM1ZsZVBoNFRmZTZhWkFNZDZRdUh3RmFIRzAycmN2OWNlN1RUK3VMckxEClpmZUJTczFhMWtXWGVVSm9nTm53em9mbGdPdXRXVTlaMWk3WGNaV1o0Y1B3WlFMY2hzdTR6NjNvaVJtTVMvTFAKcmpBT2hkSlVnQ1c2dXVQb29TaVgra3FXdTRYczczUFl5biswV2daNzJGMSs4SWlBNHlVSUMrMXRmd3hMSlZGTApscDZiUlppeFlYcE55NEVDZ2NFQWxHMjdzTFRpUUhwRW1FbXdOTUEvamdVMjJYMTMyc3NTQkJsdytFNjlUOHJ3CjNTWTROR2VZRkxRR3dudTFrZzliemZ4REppY09tejdlbEVIUG9yODNIa1NiQ25XZTJqTXpvTXlrSWFvTFhMU1MKNWRzNExqQkZyRWpZejNxQW1wQlkrR1JtMVV5d1FzUVdrN1BUSGdqOG5ZWGJJSkVuWmhyckUwOCs0SWxIMEVHbQpEbEYwcFgwTWFGdnhyN1ZHZHJndVRzSUM0emFPRURYQktja2huUzB1ZDdQNkU4RGFvVW9NTVo5b0trNEs1VnUxCjRFZlZNc2djb1kyU1UxdjZldUtGQW9IQkFNdWg4NzJyQ0NCWW1SeFVNQVlITHBEU2lLak9hWFVCK3RDSXg1dS8Kc08vejJHUTNzQVlzMFcyUjVNM0N2Ym9hREdrQUt3cTNqdjFONU0rdjVrMlVCZXVrNm05NS9UcnNhaGRMb2huVwpxWUh4V1NndUxRSkhpdENMNXA0ZVdXRjNYbUlNekVtaXlRTTRLWnNJVzF2aDhzTExudTJVM2lJVkM2Ukp2ZkJiCkZGU3NQQ3JFQ1RMOTZuSmd4RW9RV21tN25kVWdtT0UxV0VuTGRvbTI3Q3lWSkRZa3MvS3d0UEdrenRpSHRBZVgKcW5iWDJjU1hWN0VPM1JqZUpGYjVWOHVtUnc9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg=="
  # eg. openssl_crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVVekNDQXJzQ0ZIMmtpVjRIUDFvTUZoWHY4Z0I5dnQxbWIyMUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1HWXgKQ3pBSkJnTlZCQVlUQWtOT01Rc3dDUVlEVlFRSERBSlRTREVPTUF3R0ExVUVDZ3dGU1c1MFpXd3hEREFLQmdOVgpCQXNNQTBSbGRqRU5NQXNHQTFVRUF3d0VaV2h6YlRFZE1Cc0dDU3FHU0liM0RRRUpBUllPWldoemJVQnBiblJsCmJDNWpiMjB3SGhjTk1qSXdPVEl4TURneE16UTFXaGNOTWpNd09USXhNRGd4TXpRMVdqQm1NUXN3Q1FZRFZRUUcKRXdKRFRqRUxNQWtHQTFVRUJ3d0NVMGd4RGpBTUJnTlZCQW9NQlVsdWRHVnNNUXd3Q2dZRFZRUUxEQU5FWlhZeApEVEFMQmdOVkJBTU1CR1ZvYzIweEhUQWJCZ2txaGtpRzl3MEJDUUVXRG1Wb2MyMUFhVzUwWld3dVkyOXRNSUlCCm9qQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FZOEFNSUlCaWdLQ0FZRUF2Snc3czRXYjdUb3Q5ZDdWVjZWYng5VHcKclBaaVUvYzlodkdVcnBaandEYkxsUVRoWkpINnVJSUJ2NHRFaFMyR3VXQktVTklldGcvVTY3RGE0ZzNmaTNDRQpCbnVKaHFMWE5DYUh6dDRMcTJnN01qNVJzbkJTMElOcmtidWJmNmxYdW0zbWVQMFlDdjNnbVZtK3hNRGNuWVcwCkJhRC9EOGNKZG5xYUtrNzhUcE5qMmFxL05NTWJ6UnNHUUZqdVJKSXlPSnpJemxtVUFOb1JaSFJEY3dXRzJoc2sKNnVjbjRuSjc5ek9XOHZhQm82OWk2UktqbjYzbkx0NVR4K3EvV1pQWEF2a3hhWUhNb1NmYUV4TncwMHRscnUvdgo2dmNRU2EzRkI2N3Q4YzFWUkh0QjZ3SDhNeTVwUE05Tks2RmRBbUtGdStGbGRBdUQ2VER0L1pGNDFUT2RQa0o1CldZbzBTTnZYRXNtb0EyeVRFM3luVHNwS0VwOVBGRVUvUHNLeHB2aS81NzBZelhXYTdiN1AxVXIyei96VmlsMTUKN204OVU4dzdhYjd4aHhRLzNqb1BmNkxOTU1GTFR3RmFkMDYxcWU0TzJ0MnN5bnZoWHRPQkhGbytBL3orb1ovNwpaTlFXbjgxTm8ralUrWVJ3Y2pTRUwzcEhZVi9LYTRTL3BCQUFKZkkvQWdNQkFBRXdEUVlKS29aSWh2Y05BUUVMCkJRQURnZ0dCQUprQzdma21CbDByRDgvWE5USThGdS9sWTVaTzNzMlJqZ2RXbUkyNXJxV3lyZ3dYQkxJemlhWjEKSkJkVlFFTWNDQnp4SThKeE1YZVhKeFBDYS9sb09JUFlRVUxSRHcvL0NLaGRlMHhLZmdkNENjV1JBNTljNWkzaApTYmdSUmI5MDRxbGFKY3N1ajlXc1RRREd2Wk1oZHBTVndkbk1DWk1SU1F5RUoweWc1bE5PZnkzSFdyNmdsenM2CjJQVGZkc0d1MUtUYlZFaytoS25jNTRJSHhzTDFnTXpiWVNFb3RtWXlRK3Nlb05ZaGorN2Nnc3ZUSlBlUmtmSnMKb042amNZUWcrZ253eHJkNlRlK0R1RlRGczJhRXdpSlNBaHVsaUF0MjRGY3ZBbEpwbnpkU3cyRy94SGdDaDhLawpaNC9LdjRMSWpkeDM4Um5xR3NrZUtiZUhrZm51NDNtN0YrMkgxV3R0YjJLcE1CSDlMK2xiNm90d3RWcnZHUnVpCkx4N2ZFU0NMR3FDR0FkNzJyZzJQL0NqWENvQ280Q0kzZlg0MGYrTXBscC90Rlo3dGYrc0JlL20yKzBQUGc1OGYKV3VIRzJXNXlHTnp3Z3R6SWNXd2xhTlNzeFRqU1dKcWlhMGcwOFllVGxjRk1CWjFxZkYyTzlwVmNpOUFWVkhkYwpBak5wWXArM05BPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ=="
  openssl_key: ""
  openssl_crt: ""

---
# ehsm-kms PersistentVolume for CouchDB
apiVersion: v1
kind: PersistentVolume 
metadata:
  name: ehsm-pv-nfs
spec:
  capacity:
    storage: 10Gi 
  accessModes:
    - ReadWriteOnce 
  persistentVolumeReclaimPolicy: Retain 
  storageClassName: nfs
  nfs:
    # This path is the folder path on your NFS server
    path: /nfs_ehsm_db
    # you need adjust 1.2.3.4 to your NFS IP.
    server: 1.2.3.4

---
# ehsm-kms CouchDB
apiVersion: v1
kind: Service
metadata:
  name: couchdb
  namespace: ehsm-kms
  labels:
    app: couchdb
spec:
  ports:
    - name: couchdb
      port: 5984
      targetPort: 5984
  selector:
    app: couchdb
  clusterIP: None 
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: couchdb
  namespace: ehsm-kms
spec:
  selector:
    matchLabels:
      app: couchdb
  serviceName: "couchdb"
  replicas: 1
  template:
    metadata:
      labels:
        app: couchdb
    spec:
      containers:
      - name: couchdb
        image: couchdb:3.2
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            port: couchdb-port
            path: /
          initialDelaySeconds: 5
          periodSeconds: 10
        ports: 
        - containerPort: 5984
          name: couchdb-port
        volumeMounts:
        - name: couch-persistent-storage
          mountPath: /opt/couchdb/data
        env:
          - name: COUCHDB_USER
            valueFrom:
              secretKeyRef:
                name: ehsm-secret
                key: couch_root_username
          - name: COUCHDB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ehsm-secret
                key: couch_root_password

  volumeClaimTemplates:
  - metadata:
      name: couch-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "nfs"
      resources:
        requests:
          storage: 10Gi

---
# dkey cache          
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: dkeycache-deamonset
  namespace: ehsm-kms
spec:
  selector:
    matchLabels:
      name: dkeycache
  template:
    metadata:
      labels:
        name: dkeycache
    spec:
      volumes:
      - name: dev-enclave
        hostPath:
          path: /dev/sgx/enclave
      - name: dev-provision
        hostPath:
          path: /dev/sgx/provision
      - name: dev-aesmd
        hostPath:
          path: /var/run/aesmd
      - name: dev-dkeyprovision
        hostPath:
          path: /var/run/ehsm
      containers:
      - name: dkeycache
        image: intelccc/ehsm_dkeycache:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /dev/sgx/enclave
          name: dev-enclave
        - mountPath: /dev/sgx/provision
          name: dev-provision
        - mountPath: /var/run/aesmd
          name: dev-aesmd
        - mountPath: /var/run/ehsm
          name: dev-dkeyprovision
        readinessProbe:
            exec:
              command: ["/bin/sh", "-c", "test -e /tmp/dkeycache_isready.status && echo 0"]
            initialDelaySeconds: 30
            periodSeconds: 10
        livenessProbe:
            exec:
              command: ["/bin/sh", "-c", "pgrep ehsm-dkeycache && echo 0"]
            initialDelaySeconds: 60
            periodSeconds: 10
        env:
        - name: PCCS_URL 
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: pccs_url
        - name: DKEYSERVER_IP
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: dkeyserver_ip
        - name: DKEYSERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: dkeyserver_port

---
# ehsm-kms service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ehsm-kms-deployment
  namespace: ehsm-kms
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ehsm-kms
  template:
    metadata:
      labels:
        app: ehsm-kms
    spec:
      volumes:
      - name: dev-enclave
        hostPath:
          path: /dev/sgx/enclave
      - name: dev-provision
        hostPath:
          path: /dev/sgx/provision
      - name: dev-aesmd
        hostPath:
          path: /var/run/aesmd
      - name: dev-dkeyprovision
        hostPath:
          path: /var/run/ehsm
      initContainers:
      - name: init-ehsm-kms
        image: intelccc/ehsm_kms_service:latest
        imagePullPolicy: IfNotPresent
        command: ['sh' , '-c','until curl http://${EHSM_CONFIG_COUCHDB_SERVER}:${EHSM_CONFIG_COUCHDB_PORT}/; do echo waiting for couchDB; sleep 5; done;']
        env:
        - name: EHSM_CONFIG_COUCHDB_SERVER
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: database_url
        - name: EHSM_CONFIG_COUCHDB_PORT
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: database_port
      containers:
      - name: ehsm-kms
        # You need to tag the ehsm-kms container image with this name on each worker node or change it to point to a docker hub to get the container image.
        image: intelccc/ehsm_kms_service:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /dev/sgx/enclave
          name: dev-enclave
        - mountPath: /dev/sgx/provision
          name: dev-provision
        - mountPath: /var/run/aesmd
          name: dev-aesmd
        - mountPath: /var/run/ehsm
          name: dev-dkeyprovision
        readinessProbe:
          httpGet:
            path: /
            port: ehsm-kms-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: ehsm-kms-port
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 5
        env:
        - name: PCCS_URL 
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: pccs_url
        - name: EHSM_CONFIG_COUCHDB_USERNAME
          valueFrom:
            secretKeyRef:
              name: ehsm-secret
              key: couch_root_username
        - name: EHSM_CONFIG_COUCHDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ehsm-secret
              key: couch_root_password
        - name: EHSM_CONFIG_COUCHDB_SERVER
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: database_url
        - name: EHSM_CONFIG_COUCHDB_PORT
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: database_port
        - name: EHSM_CONFIG_COUCHDB_DB
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: database_name
        - name: EHSM_CONFIG_OPENSSL_COUNTRYNAME
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: openssl_countryName
        - name: EHSM_CONFIG_OPENSSL_LOCALITYNAME
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: openssl_localityName
        - name: EHSM_CONFIG_OPENSSL_ORGANIZATIONNAME
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: openssl_organizationName
        - name: EHSM_CONFIG_OPENSSL_ORGANIZATIONALUNITNAME
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: openssl_organizationalUnitName
        - name: EHSM_CONFIG_OPENSSL_COMMONNAME
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: openssl_commonName
        - name: EHSM_CONFIG_OPENSSL_EMAILADDRESS
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: openssl_emailAddress
        - name: EHSM_CONFIG_OPENSSL_KEY
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: openssl_key
        - name: EHSM_CONFIG_OPENSSL_CRT
          valueFrom:
            configMapKeyRef:
              name: ehsm-configmap
              key: openssl_crt
        ports:
        - name: ehsm-kms-port
          containerPort: 9000
---
apiVersion: v1
kind: Service
metadata:
  name: ehsm-kms-service
  namespace: ehsm-kms
spec:
  type: LoadBalancer
  selector:
    app: ehsm-kms
  ports:
    - name: ehsm-kms
      protocol: TCP
      # This port is ehsm_kms_service access port,you can change it to what you want.
      port: 9000
      targetPort: 9000
      nodePort: 30000
  sessionAffinity: ClientIP
  externalIPs:
  # This IP is ehsm_kms_service access IP, You need to adjust 1.2.3.4 to the service IP you want to expose
  - 1.2.3.4
