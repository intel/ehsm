# dkeyserver ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: dkeyserver-configmap
  namespace: dkeyserver
data:
  # you need adjust https://1.2.3.4:8081 to your pccs_url.
  pccs_url: "https://1.2.3.4:8081"
  # you need adjust main-0.main:8888 to your root dkeyserver service url.
  main_service_url: "dkey-main-0.dkey-main-service:8888"
  # you need adjust 1.2.3.4:8888 to your dkey provisioning service url.
  dkey_provisioning_service_url: "1.2.3.4:8888"

---
# ehsm-kms main dkeyserver
apiVersion: v1
kind: Service
metadata:
  name: dkey-main-service
  namespace: dkeyserver
  labels:
    app: dkey-main
spec:
  ports:
    - name: dkey-main-svc-port
      port: 8888
      targetPort: 8888
  selector:
    app: dkey-main
  clusterIP: None 

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dkey-main
  namespace: dkeyserver
spec:
  selector:
    matchLabels:
      app: dkey-main
  serviceName: "dkey-main-service"
  replicas: 1
  template:
    metadata:
      labels:
        app: dkey-main
    spec:
      containers:
      - name: dkey-main
        image: intel/dkeyserver:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        readinessProbe:
          tcpSocket:
            port: dkey-main-port
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: dkey-main-port
          initialDelaySeconds: 20
          periodSeconds: 10
        ports: 
        - containerPort: 8888
          name: dkey-main-port
        env:
        - name: PCCS_URL 
          valueFrom:
            configMapKeyRef:
              name: dkeyserver-configmap
              key: pccs_url
        - name: DKEY_TARGET_SERVICE_URL 
          valueFrom:
            configMapKeyRef:
              name: dkeyserver-configmap
              key: dkey_provisioning_service_url

---
# ehsm-kms worker dkeyserver
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-deployment
  namespace: dkeyserver
spec:
  replicas: 3
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      initContainers:
      - name: init-worker
        # this images same the container's image.
        image: intel/dkeyserver:latest
        imagePullPolicy: IfNotPresent
        command: ['sh' , '-c','until nslookup dkey-main-service; do echo waiting for main servier; sleep 5; done;']
      containers:
      - name: worker
        # You need to tag the worker container image with this name on each worker node or change it to point to a docker hub to get the container image.
        image: intel/dkeyserver:latest
        imagePullPolicy: IfNotPresent
        readinessProbe:
          tcpSocket:
            port: worker-port
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: worker-port
          initialDelaySeconds: 20
          periodSeconds: 10
        securityContext:
          privileged: true
        env:
        - name: PCCS_URL 
          valueFrom:
            configMapKeyRef:
              name: dkeyserver-configmap
              key: pccs_url
        - name: DKEY_TARGET_SERVICE_URL 
          valueFrom:
            configMapKeyRef:
              name: dkeyserver-configmap
              key: main_service_url
        ports:
        - containerPort: 8888
          name: worker-port

---
apiVersion: v1
kind: Service
metadata:
  name: dkey-provisioning-service
  namespace: dkeyserver
spec:
  type: LoadBalancer
  selector:
    app: worker
  ports:
    - name: worker
      protocol: TCP
      # This port is ehsm-kms worker dkeyserver access port,you can change it to what you want.
      port: 8888
      targetPort: 8888
      nodePort: 30010
  sessionAffinity: ClientIP
  externalIPs:
  # This IP is ehsm-kms worker dkeyserver access IP, You need to adjust 1.2.3.4 to the service IP you want to expose
  - 1.2.3.4
