/*
 * Copyright (C) 2020-2021 Intel Corporation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *   * Neither the name of Intel Corporation nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

enclave {
    from "sgx_tkey_exchange.edl" import *;
    from "sgx_tstdc.edl" import *;
    from "sgx_tsgxssl.edl" import *;
    from "sgx_ttls.edl" import *;
    from "sgx_pthread.edl" import *;

    include "sgx_ttls.h"
    include "sgx_key_exchange.h"
    include "sgx_quote.h"
    include "sgx_trts.h"
    include "stdbool.h"
    include "datatypes.h"
    include "dh_session_protocol.h"
    include "sys/socket.h"
    include "sys/select.h"
    include "netdb.h"
    include "poll.h"

    untrusted {
        void ocall_printf([in, string] const char *str);
        int ocall_close(int fd);
        void ocall_sleep(int sec);
        void ocall_get_current_time([out] uint64_t *p_current_time);
        int ocall_socket (int domain, int type, int protocol) propagate_errno;
        int ocall_connect (int fd, [in, size=len] const struct sockaddr *addr, socklen_t len) propagate_errno;
    };

    trusted {       
        public int enclave_launch_tls_client(
            [in, string] const char* server_name,
            uint16_t server_port,
            uint32_t key,
            [in, string] const char* action);
    };
};
